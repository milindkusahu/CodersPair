events {}

http {
  client_max_body_size 10M;

  # Default server - reject all unknown hosts (including IP)
  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    server_name _;
    
    ssl_certificate /etc/letsencrypt/live/coderspair.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/coderspair.com/privkey.pem;
    
    # Return 444 (close connection)
    return 444;
  }

  # HTTP to HTTPS redirect for valid domains
  server {
    listen 80;
    listen [::]:80;
    server_name coderspair.com www.coderspair.com;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # HTTPS - Your application
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name coderspair.com www.coderspair.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/coderspair.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/coderspair.com/privkey.pem;

    # Modern SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    location / {
      proxy_pass http://coderspair-frontend:5173;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_buffering off;
    }

    location /api/ {
      proxy_pass http://coderspair-backend:3000/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;
    }

    location = /nginx-health {
      return 200 "ok";
      add_header Content-Type text/plain;
    }
  }
}